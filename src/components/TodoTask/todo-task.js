import { useNavigate, useParams } from 'react-router-dom';
import { useTodoState } from '../../hooks';
import { BackButton } from '../BackButton/back-button';
import { useState } from 'react';
import styles from './todo-task.module.css';

export const TodoTask = () => {
    const params = useParams();
    const id = params.id;

    /** FIXME:
     * 1. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É —Å–æ —Å–±—Ä–æ—Å–æ–º –∑–Ω–∞—á–µ–Ω–∏–π
     * 2. –ù–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –æ–±—ä–µ–¥–µ–Ω–∏—Ç—å use-todos-state –∏ use-todo-state
     *      useTodosState - —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
     *      useTodoState - —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏
     */
    const { todo, setTodo, resetTodo, deleteTodo, updateTodo } = useTodoState(id);

    const [isEditMode, setIsEditMode] = useState(false);

    const navigate = useNavigate();

    const onEdit = () => setIsEditMode(!isEditMode);
    const onCancel = () => {
        resetTodo();
        setIsEditMode(false);
    };
    const onDelete = () => {
        deleteTodo();
        navigate('/', { replace: true });
    };
    const onSave = () => {
        updateTodo();
        setIsEditMode(false);
    };

    const onChangeTitle = (event) =>
        setTodo((prev) => ({ ...prev, title: event.target.value }));

    const onChangeCompeleted = (event) =>
        setTodo((prev) => ({ ...prev, completed: event.target.checked }));

    return (
        <>
            <BackButton>‚¨ÖÔ∏è –ù–∞–∑–∞–¥</BackButton>
            <div className={styles.control}>
                <button disabled={isEditMode} onClick={onEdit}>
                    ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
                <button onClick={onDelete}>‚ùå –£–¥–∞–ª–∏—Ç—å</button>
            </div>
            <div className={styles.data}>
                <div className={styles.title}>
                    <label className={styles.title_label}>–ó–∞–¥–∞–Ω–∏–µ</label>
                    <br />
                    <textarea
                        className={styles.title_textarea}
                        value={todo.title}
                        onChange={onChangeTitle}
                        disabled={!isEditMode}
                    />
                </div>
                <div className={styles.completed}>
                    <input
                        type="checkbox"
                        checked={todo.completed || false}
                        onChange={onChangeCompeleted}
                        disabled={!isEditMode}
                    />{' '}
                    –í—ã–ø–æ–ª–Ω–µ–Ω–æ
                </div>
                {isEditMode ? (
                    <div className={styles.action}>
                        <button onClick={onCancel}>üö´ –û—Ç–º–µ–Ω–∞</button>
                        <button onClick={onSave}>‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    </div>
                ) : null}
            </div>
        </>
    );
};
